// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: phrases.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPhrasesBatch = `-- name: CreatePhrasesBatch :one
WITH batch AS (
    INSERT INTO phrase_batches (name)
    VALUES ($1)
    RETURNING id
)

INSERT INTO phrases (value, batch_id)
SELECT
    phrase_value,
    (SELECT id FROM batch)
FROM UNNEST($2::text []) AS phrase_value
RETURNING id, batch_id
`

type CreatePhrasesBatchParams struct {
	Name    string   `json:"name"`
	Phrases []string `json:"phrases"`
}

type CreatePhrasesBatchRow struct {
	ID      int64       `json:"id"`
	BatchID pgtype.Int8 `json:"batch_id"`
}

func (q *Queries) CreatePhrasesBatch(ctx context.Context, arg CreatePhrasesBatchParams) (CreatePhrasesBatchRow, error) {
	row := q.db.QueryRow(ctx, createPhrasesBatch, arg.Name, arg.Phrases)
	var i CreatePhrasesBatchRow
	err := row.Scan(&i.ID, &i.BatchID)
	return i, err
}
